<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Community on Cloud architect insights :: Joshua Mangold</title>
    <link>https://jmangold23.github.io/mangoldaiwiki/tags/community/</link>
    <description>Recent content in Community on Cloud architect insights :: Joshua Mangold</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://jmangold23.github.io/mangoldaiwiki/tags/community/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unlock the Power of PowerShell Development with Visual Studio Code</title>
      <link>https://jmangold23.github.io/mangoldaiwiki/posts/unlock_the_power_of_powershell_development_with_visual_studio_code/</link>
      <pubDate>Tue, 28 May 2024 00:00:00 +0000</pubDate>
      
      <guid>https://jmangold23.github.io/mangoldaiwiki/posts/unlock_the_power_of_powershell_development_with_visual_studio_code/</guid>
      <description>Unlock the Power of PowerShell Development with Visual Studio Code If you&amp;rsquo;re a PowerShell developer, Visual Studio Code (VS Code) is the ultimate tool to take your productivity to new heights. Developed by Microsoft, VS Code is a cross-platform, open-source code editor packed with features that make PowerShell script writing and debugging a breeze.
Get Started with VS Code and PowerShell To get started, you&amp;rsquo;ll need to install both Visual Studio Code and the PowerShell extension.</description>
    </item>
    
    <item>
      <title>Navigating the Diverse Perspectives in PowerShell Best Practices</title>
      <link>https://jmangold23.github.io/mangoldaiwiki/posts/navigating_the_diverse_perspectives_in_powershell_best_practices/</link>
      <pubDate>Sat, 04 May 2024 00:00:00 +0000</pubDate>
      
      <guid>https://jmangold23.github.io/mangoldaiwiki/posts/navigating_the_diverse_perspectives_in_powershell_best_practices/</guid>
      <description>Navigating the Diverse Perspectives in PowerShell Best Practices If you&amp;rsquo;ve spent any time exploring PowerShell code projects, you&amp;rsquo;ve likely noticed that the PowerShell community has a wide range of perspectives on what constitutes the &amp;lsquo;right&amp;rsquo; way to write PowerShell scripts and modules. This diversity of opinions can make it challenging to establish a clear set of best practices that everyone agrees on.
The introduction provided outlines some of the key factors that have contributed to this lack of consensus over the years.</description>
    </item>
    
  </channel>
</rss>
